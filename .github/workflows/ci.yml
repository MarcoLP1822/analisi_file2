# ------------------------------------------------------------
# GitHub Actions ‚Äî CI pipeline
# ------------------------------------------------------------
# 1. build-test  ‚Üí esegue lint, type-check, test (pre-commit)
# 2. docker      ‚Üí (solo se 1 passa) build-push immagine su GHCR
# ------------------------------------------------------------

name: CI

# ‚îÄ‚îÄ‚îÄ Trigger ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
on:
  pull_request:          # ogni commit su PR
  push:                  # push diretto sul branch default
    branches: [ main ]

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
jobs:

  # ==========================================================
  # 1) Lint, type-check e test
  # ==========================================================
  build-test:
    runs-on: ubuntu-latest

    steps:
      # ---------- checkout repo ----------
      - uses: actions/checkout@v4

      # ---------- Python 3.11 ----------
      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # ---------- Installa dipendenze ----------
      - name: üì¶ Install dependencies
        run: |
          python -m pip install --upgrade pip
          # üëâ dipendenze dell‚Äôapp
          pip install -r requirements.txt
          # üëâ tool richiamati dai pre-commit hook
          pip install pre-commit ruff mypy pytest pytest-cov

      # ---------- Esegui pre-commit (ruff, mypy, pytest) ----------
      - name: üö¶ Run pre-commit (ruff, mypy, pytest)
        run: pre-commit run --all-files --show-diff-on-failure

  # ==========================================================
  # 2) Build + push Docker image su GitHub Container Registry
  #    (parte solo se build-test √® verde)
  # ==========================================================
  docker:
    runs-on: ubuntu-latest
    needs: build-test          # dipendenza

    # Permessi minimi per push su GHCR
    permissions:
      packages: write
      contents: read

    steps:
      # ---------- checkout repo ----------
      - uses: actions/checkout@v4

      # ---------- Login a GHCR ----------
      # Per repo pubblici basta GITHUB_TOKEN (scope packages:write gi√† incluso)
      - name: üîë Log-in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # ---------- Calcola il tag immagine in minuscolo ----------
      # GHCR richiede tutto lowercase (owner compreso).
      - name: üè∑Ô∏è  Compute image tag
        id: tag
        run: |
          IMAGE="ghcr.io/$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]'):latest"
          echo "IMAGE_TAG=${IMAGE}" >> "$GITHUB_ENV"
          echo "Computed tag: ${IMAGE}"

      # ---------- Build & push con buildx ----------
      - name: üê≥ Build & push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_TAG }}
          provenance: false     # opz.: riduce size immagine
